/**
 * This injects Tailwind's base styles, which is a combination of
 * Normalize.css and some additional base styles.
 *
 * You can see the styles here:
 * https://github.com/tailwindcss/tailwindcss/blob/master/css/preflight.css
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/preflight";
 */
@tailwind preflight;

/**
 * This injects any component classes registered by plugins.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/components";
 */
@tailwind components;

/**
 * Here you would add any of your custom component classes; stuff that you'd
 * want loaded *before* the utilities so that the utilities could still
 * override them.
 *
 * Example:
 *
 * .btn { ... }
 * .form-input { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "components/buttons";
 * @import "components/forms";
 */

body {
  @apply .text-dusty-blue-darkest;
}

.logo {
  @apply .block;
  width: 99px;
  height: 20px;
  margin-left: -1rem;
}

.logo-sm {
  width: 89.1px;
  height: 18px;
}

.input-label {
  @apply .text-sm .font-bold .text-dusty-blue-darker .pb-2 .block;
}

.input-field {
  @apply .text-dusty-blue-darker .border-2 .rounded-lg .p-3 .w-full;
}

.input-field::placeholder {
  @apply .text-dusty-blue-dark .opacity-50;
}

.input-field:focus,
.input-field:focus-within {
  @apply .border-turquoise;
  outline: none;
}

.input-field-error {
  @apply .border-red;
}

.input-field-error:focus,
.input-field-error:focus-within {
  @apply .border-red;
}

.form-errors {
  @apply .mt-2 .text-sm .text-red .font-bold;
}

.composer {
  @apply .block .relative .p-4 .bg-grey-light .w-full .rounded-lg;
}

.composer:focus,
.composer:active,
.composer:focus-within {
  /* @apply border-turquoise; */
}

.btn {
  @apply .rounded-full .px-6 .py-3 .font-bold .text-white .border-2 .whitespace-no-wrap .cursor-pointer .text-center .inline-block;
  transition: background-color 0.2s ease, border-color 0.2s ease, opacity 0.2s ease;
  line-height: 1.15;
}

.btn:focus {
  outline: none;
}

.btn:active {
  transform: translateY(1px);
}

.btn:disabled {
  @apply cursor-not-allowed opacity-50;
}

.btn-xs {
  @apply px-3 py-0 text-sm border h-6;
}

.btn-sm {
  @apply px-4 py-1 text-sm;
}

.btn-md {
  @apply px-5 py-2 text-sm;
}

.btn-blue {
  @apply bg-blue border-blue;
}

.btn-blue:hover {
  @apply bg-blue-dark border-blue-dark;
}

.btn-turquoise-outline {
  @apply bg-transparent border-turquoise text-turquoise-dark;
}

.btn-turquoise-outline:hover {
  @apply border-turquoise-dark text-turquoise-dark;
}

.btn-grey-outline {
  @apply bg-transparent text-dusty-blue-dark;
}

.btn-turquoise-inverse {
  @apply bg-white border-white text-turquoise-dark;
}

.btn-dusty-blue-inverse {
  @apply bg-white border-white text-dusty-blue;
}

.btn-dusty-blue-inverse:hover {
  @apply bg-grey-lighter;
}

.btn-checked {
  @apply pl-8 bg-no-repeat select-none;
  background-position: 0.5rem center;
  background-image: url("data:image/svg+xml,%3Csvg width='16px' height='13px' viewBox='0 0 16 13' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg fill='%23FFFFFF' fill-rule='nonzero'%3E%3Cpath d='M5.20018971,8.67665709 L13.8460109,0 L16,2.16167145 L7.35417882,10.8383285 L5.20018971,13 L0,7.78126346 L2.15398911,5.619592 L5.20018971,8.67665709 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

.avatar {
  @apply w-9 h-9 text-base;
  @apply bg-dusty-blue;
  @apply rounded-full;
  @apply flex items-center justify-center;
  @apply font-bold text-white select-none;
}
.avatar-tiny {
  @apply w-6 h-6 text-xs;
}
.avatar-md {
  @apply w-12 h-12 text-lg;
}

.control {
  @apply flex items-center;
  position: relative;
  cursor: pointer;
}
.control input {
  position: absolute;
  opacity: 0;
  z-index: -1; /* Put the input behind the label so it doesn't overlay text */
}
.control-indicator {
  @apply flex-no-grow flex-no-shrink;
  @apply w-6 h-6;
  @apply border-grey border-2;
  @apply mr-3;
  display: block;
  line-height: 1rem;
  font-size: 65%;
  color: #eee;
  text-align: center;
  background-size: 65%;
  background-position: center center;
  background-repeat: no-repeat;
  user-select: none;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

/* Focus */
.control input:focus ~ .control-indicator {
  /* @apply .border-turquoise; */
}

/* Checked state */
.control input:checked ~ .control-indicator {
  @apply bg-blue text-white border-blue;
}

/* Active */
.control input:active ~ .control-indicator {
  @apply bg-blue-dark text-white border-blue-dark;
}

/* Checkbox modifiers */
.checkbox .control-indicator {
  @apply rounded;
}
.checkbox input:checked ~ .control-indicator {
  background-image: url("data:image/svg+xml,%3Csvg width='16px' height='13px' viewBox='0 0 16 13' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg fill='%23FFFFFF' fill-rule='nonzero'%3E%3Cpath d='M5.20018971,8.67665709 L13.8460109,0 L16,2.16167145 L7.35417882,10.8383285 L5.20018971,13 L0,7.78126346 L2.15398911,5.619592 L5.20018971,8.67665709 Z'%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

/**
 * Markdown Documents
 */

.markdown {
  @apply leading-normal;
}

.markdown h1 {
  @apply text-2xl mb-4;
}

.markdown h2 {
  @apply text-xl mb-4 mt-6;
}

.markdown h3 {
  @apply text-lg mb-4 mt-6;
}

.markdown p {
  @apply mb-4;
}

.markdown *:last-child {
  @apply mb-0;
}

.markdown ul,
.markdown ol {
  @apply mb-4;
}

.markdown pre {
  @apply mb-4 p-3 bg-grey-lighter rounded overflow-auto;
}

.markdown code {
  @apply mx-1 px-2 py-1 bg-grey-lighter rounded;
}

.markdown pre code {
  @apply m-0 p-0 bg-transparent rounded-none;
  word-wrap: normal;
  overflow: visible;
}

.markdown img,
.markdown img:last-child {
  @apply my-2;
}

.markdown a {
  @apply text-blue;
}

.markdown blockquote {
  @apply pl-3 mb-4 border-l-3 border-grey text-dusty-blue-dark;
}

post-editor {
  @apply block relative;
}

post-editor.dragging-over > * {
  box-shadow: inset 0 0 0 2px config('colors.blue');
}

/**
 * @-mention flyover styles
 */

.tribute-container {
  @apply absolute block pin-b pin-l p-1 overflow-auto z-30 shadow-lg bg-white rounded w-full;
  height: auto;
  max-height: 300px;
  transform: translateY(100%);
}

.tribute-pin-t .tribute-container {
  @apply pin-t;
  bottom: inherit;
  transform: translateY(-100%);
}

.tribute-container ul {
  @apply list-reset;
}

.tribute-container li {
  @apply font-sans font-antialised;
  @apply px-3 py-2 cursor-pointer border-b border-grey-light;
  @apply text-dusty-blue-dark;
  @apply rounded;
}

.tribute-container li:last-child {
  @apply border-none;
}

.tribute-container li.highlight, .tribute-container li:hover {
  @apply bg-grey-light border-transparent;
}

.tribute-container li span {
  @apply font-bold;
}

.tribute-container li.no-match {
  @apply cursor-default;
}

.tribute-container .menu-highlighted {
  @apply font-bold;
}

/**
 * Marketing site common styles
 */

.marketing-headline {
  @apply mb-8 font-black leading-tight text-5xl text-dusty-blue-darkest;
}

@screen sm {
  .marketing-headline {
    @apply leading-tighter text-6xl;
  }
}

.marketing-sub-head {
  @apply mt-8 mb-6 font-black leading-tight text-dusty-blue-darkest;
}

.marketing-screenshot {
  @apply block rounded border-grey outline-grey my-8 max-w-full w-auto h-auto;
}

.marketing-long-form p {
  @apply mb-6;
}

/**
 * This injects all of Tailwind's utility classes, generated based on your
 * config file.
 *
 * If using `postcss-import`, use this import instead:
 *
 * @import "tailwindcss/utilities";
 */
@tailwind utilities;

/**
 * Here you would add any custom utilities you need that don't come out of the
 * box with Tailwind.
 *
 * Example :
 *
 * .bg-pattern-graph-paper { ... }
 * .skew-45 { ... }
 *
 * Or if using a preprocessor or `postcss-import`:
 *
 * @import "utilities/background-patterns";
 * @import "utilities/skew-transforms";
 */

.-z-1 {
  z-index: -1;
}

.font-antialised {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.selection-turquoise::selection,
.selection-turquoise *::selection {
  background-color: #73f1ff;
}

.max-w-400px {
  max-width: 400px;
}

.max-w-90 {
  max-width: 90%;
}

.no-outline {
  outline: none;
}

.no-outline:focus {
  outline: none;
}

.placeholder-blue::placeholder {
  @apply text-dusty-blue-dark opacity-50;
}

 /* Borrowed from https://css-tricks.com/snippets/css/shake-css-keyframe-animation/ */
.shake {
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }

  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}

.invisible-file {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1;
}

.transition-bg {
  transition: background-color 0.2s ease;
}

.scrolled-top .scrolled-top-no-border {
  @apply border-transparent;
}

.link-reset {
  color: inherit;
  text-decoration: inherit;
}

.transition-w {
  transition: width 0.3s;
}

.focus-within-outline:focus-within {
  @apply bg-white;
  box-shadow: inset 0 0 0 2px config('colors.grey');
}

.pin-l-50 {
  left: 50%;
}

.-pin-l-50 {
  left: -50%;
}

.outline-grey {
  box-shadow: 0 0 0 1px config('colors.grey');
}
